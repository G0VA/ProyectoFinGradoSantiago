<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFiltrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCACGAIsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD92KKKK9A4wooooAKKKKACiiigAooplzcR2VuZZpEhiHWSRgqj
        8TxQG2rH0Vjx/EPw9Lc+Suv6G0w6xi/iLfluzWyUIUHBweQcdauUJR+JWIhUhP4HcSiiioLCiiigAooo
        oAKKKKACiiigAooooAK85/ae/ai8MfsnfDr/AISLxM9y6zzfZrKztU33F9NtLbFBwFACkl2IUcdyoNz9
        or9ofw5+zJ8Mb7xP4ju4444EItLMSAXGpT/wwwqeWYkjJxhRljgAmvzX+Ffw1+IP/BXD9pi41PXru60z
        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
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
</root>