<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEmple.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABqAG0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCxRRRX+jB/nWFFFFABXp/wg/Yz+Jnx0tI7rw54S1G40+XBS9uN
        trbOPVZJSocf7ua+wf8Agnp/wTX07TPD9j44+ImnxahqF6i3GmaPcpuhs4zyssyHh5CMEIeFHUFj8voP
        7Rf/AAVV8BfBDUp9I0KCXxnrFoxjlSylENlAw6qZ8MCR/sKw6gkEYr8ezjxJxlfHSyvhfDfWKkfik/gX
        4rTpzOSV9rn6/k/hvhKGBjmnFGJ+r05fDFfG/wAHr15VFu29j5T/AOHP/wAXvsXm/wDFL78f6n+0jv6+
        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
</value>
  </data>
</root>